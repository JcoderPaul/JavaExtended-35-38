******* Enum Types - Типы перечислений *******

Тип перечисления (enum type) - это специальный тип данных, который позволяет переменной
быть набором предопределенных констант. Переменная должна быть равна одному из предопределенных
для нее значений. Общие примеры включают направления по компасу (значения СЕВЕР, ЮГ, ВОСТОК и
ЗАПАД) и дни недели.

Поскольку они являются константами, имена полей перечисляемого типа пишутся прописными буквами.

В языке программирования Java тип перечисления определяется с помощью ключевого слова enum.

Например, вы можете указать тип перечисления дней недели следующим образом:
-----------------------------------------------------------------------------------------------
public enum Day {
    SUNDAY, MONDAY, TUESDAY, WEDNESDAY,
    THURSDAY, FRIDAY, SATURDAY
}
-----------------------------------------------------------------------------------------------

Мы можем использовать типы enum каждый раз, когда нам нужно представить фиксированный набор
констант. Enum может включать в себя естественные типы перечислений, такие как планеты в нашей
солнечной системе и наборы данных, где мы знаем все возможные значения во время компиляции —
например, выбор в меню, флаги командной строки и т. д.

Пример кода, как использовать Day перечисление, определенное выше: см. Less_35_Enum_Step1

Типы enum языка программирования Java намного мощнее, чем их аналоги в других языках. Объявление
enum определяет класс (называемый enum type). Тело класса enum может включать методы и другие поля.
Компилятор автоматически добавляет некоторые специальные методы при создании перечисления.
Например, у них есть статический values метод, который возвращает массив, содержащий все значения
перечисления в порядке их объявления. Этот метод обычно используется в сочетании с конструкцией
for-each для перебора значений перечислимого типа.

Например, код приведенного ниже примера класса перебирает все планеты Солнечной системы.
-----------------------------------------------------------------------------------------------
for (Planet p : Planet.values()) {
    System.out.printf("Your weight on %s is %f%n",
                      p, p.surfaceWeight(mass));
}
-----------------------------------------------------------------------------------------------
Основной код см. Less_35_Enum_Step2 и класс перечисления Less_35_Enum\MyEnum\Planet

Здесь Planet это тип перечисления, представляющий планеты в Солнечной системе. Они определяются
с постоянными свойствами массы и радиуса.

Каждая константа перечисления объявляется со значениями параметров массы и радиуса. Эти значения
передаются конструктору при создании константы. Java требует, чтобы константы были определены
первыми, до любых полей или методов. Также при наличии полей и методов список констант перечисления
должен заканчиваться точкой с запятой (см. Less_35_Enum\MyEnum\Planet).

В дополнение к своим свойствам и конструктору, Planet имеет методы, позволяющие получить поверхностную
гравитацию и вес объекта на каждой планете.
***********************************************************************************************
Примечание.
Все перечисления неявно расширяют java.lang.Enum. Поскольку класс может расширять только одного
родителя, язык Java не поддерживает множественное наследование состояния, поэтому перечисление
не может расширять ничего другого.

Примечание.
Конструктор для перечислимого типа должен быть закрытым для пакета или с закрытым доступом.
Он автоматически создает константы, определенные в начале тела перечисления.
Мы не можем вызвать конструктор перечисления самостоятельно.
***********************************************************************************************

Основной текст: https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html
